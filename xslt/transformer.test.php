<?php

/**
 * Test class for HackJob_Xslt_Transformer.
 * Generated by PHPUnit on 2011-10-22 at 12:17:34.
 */
class HackJob_Xslt_TransformerTest extends PHPUnit_Framework_TestCase
{
	private $doc;
	
	public function setUp()
	{
		$this->doc = new DOMDocument();
	}
	
	public function testStringToDomElement()
	{
		$node = HackJob_Xslt_Transformer::toDomElement('somestring', 'nodename', $this->doc);
		$this->assertEquals('somestring', $node->nodeValue);
		$this->assertEquals('nodename', $node->nodeName);
	}
	
	public function testIntToDomElement()
	{
		$node = HackJob_Xslt_Transformer::toDomElement(1, 'nodename', $this->doc);
		$this->assertEquals(1, $node->nodeValue);
		$this->assertEquals('nodename', $node->nodeName);
	}
	
	public function testArrayToDomElement()
	{
		$array = array('foo' => 'bar');
		$node = HackJob_Xslt_Transformer::toDomElement($array, 'nodename', $this->doc);
		$this->assertEquals(1, $node->getElementsByTagname('foo')->length);
		$this->assertEquals('bar', $node->getElementsByTagname('foo')->item(0)->nodeValue);
	}
	
	public function testObjectToDomElement()
	{
		$foo = new stdClass();
		$foo->bar = 'baz';
		$node = HackJob_Xslt_Transformer::toDomElement($foo, 'nodename', $this->doc);
		$this->assertEquals(1, $node->getElementsByTagname('bar')->length);
		$this->assertEquals('baz', $node->getElementsByTagname('bar')->item(0)->nodeValue);
	}
	
	public function testBaseModelToDomElement()
	{
		$stub = $this->getMockForAbstractClass('HackJob_Model_Base', array('Stub', null));
		$node = HackJob_Xslt_Transformer::toDomElement($stub, 'nodename', $this->doc);
		$this->assertEquals(1, $node->getElementsByTagName('id')->length);
	}
}

?>
